version: 2

models:
  - name: stg_mattermost__version_release_dates
    description: |
      Contains version information for releases. 

    columns:
      - name: version
        description: The semver string (`major.minor.patch` format).
        tests:
          - not_null
          - unique
      - name: short_version
        description: The short format of the version, omitting patch (example `v6.3`).
        tests:
          - not_null
      - name: version_major
        description: The major version of the server at the time the event was submitted.
      - name: version_minor
        description: The minor version of the server at the time the event was submitted.
      - name: version_patch
        description: The patch version of the server at the time the event was submitted.
      - name: planned_release_date
        description: The planned date for the release.
        tests:
          - not_null
      - name: is_supported
        description: Whether the version is supported or not.
        tests:
          - not_null
      - name: release_number
        description: The issue's release number.
        tests:
          - not_null
      - name: release_start_date
        description: The start date for the release.
      - name: actual_release_date
        description: The date the release was actually cut.
      - name: rc1_date
        description: The date RC1 was cut.
    tests:
      -  dbt_utils.expression_is_true:
          # A fix version can only refer to a cloud release OR on an on-prem release, not both.
          name: assert_rc1_set_when_patch_is_0
          expression: "version_patch = '0'"
          where: 'rc1_date is not null'
      -  dbt_utils.expression_is_true:
          # Release start date must be before actual start date
          name: assert_release_start_before_release
          expression: "release_start_date < actual_release_date"
          where: 'actual_release_date is not null'